// Button SCSS (BEM + nested + size map)
// 引入样式工具（命名空间化避免污染全局符号）
@use '../../styles/mixins' as mix;
$buig-button-sizes: (
    mini: (
        h: 22px,
        fs: 12px,
        px: 8px
    ),
    small: (
        h: 28px,
        fs: 13px,
        px: 12px
    ),
    medium: (
        h: 32px,
        fs: 14px,
        px: 14px
    ),
    large: (
        h: 40px,
        fs: 15px,
        px: 18px
    ),
    // legacy aliases (to be removed)
    xs: (
            h: 22px,
            fs: 12px,
            px: 8px
        ),
    sm: (
        h: 28px,
        fs: 13px,
        px: 12px
    ),
    md: (
        h: 32px,
        fs: 14px,
        px: 14px
    ),
    lg: (
        h: 40px,
        fs: 15px,
        px: 18px
    )
);

.buig-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    border: 1px solid transparent;
    padding: 0 14px;
    font-size: 14px;
    line-height: 1.2;
    cursor: pointer;
    background: var(--ui-button-bg, var(--ui-color-bg-elevated));
    color: var(--ui-button-fg, var(--ui-color-text));
    border-radius: var(--ui-button-radius, var(--ui-radius-sm));
    transition:
        background 0.15s ease,
        color 0.15s ease,
        border-color 0.15s ease,
        box-shadow 0.15s ease;
    text-decoration: none;

    // Type modifiers
    &--type-primary {
        background: var(--ui-color-primary);
        color: var(--ui-color-primary-foreground, #fff);
        @include mix.button-interactive-bg(
            var(--ui-color-primary-hover, var(--ui-color-primary)),
            var(--ui-color-primary-active, var(--ui-color-primary))
        );
        // Status coloring（限定 primary 下的语义状态）
        &.buig-button--status-success {
            background: var(--ui-color-success);
        }
        &.buig-button--status-danger {
            background: var(--ui-color-danger);
        }
        &.buig-button--status-warning {
            background: var(--ui-color-warning);
        }
        &.buig-button--status-info {
            background: var(--ui-color-info);
        }
    }
    &--type-secondary {
        background: var(--ui-color-bg-elevated);
        color: var(--ui-color-text);
        border-color: var(--ui-color-border);
        @include mix.button-interactive-bg(
            var(--ui-color-bg-hover, var(--ui-color-bg-elevated)),
            var(--ui-color-bg-active, var(--ui-color-bg-elevated))
        );
    }
    &--type-dashed {
        background: var(--ui-color-bg-elevated);
        border-style: dashed;
        border-color: var(--ui-color-border);
    }
    &--type-outline {
        background: transparent;
        color: var(--ui-color-text);
        border-color: var(--ui-color-border-strong, var(--ui-color-primary));
        @include mix.button-interactive-bg(
            var(--ui-color-bg-hover, rgba(0, 0, 0, 0.04))
        );
    }
    &--type-text {
        background: transparent;
        border-color: transparent;
        color: var(--ui-color-primary);
        @include mix.button-interactive-bg(
            var(--ui-color-bg-hover, rgba(0, 0, 0, 0.05))
        );
    }

    // （状态类已合并进上方 &--type-primary 中）

    // Shape
    &--shape-round {
        border-radius: 999px;
    }
    &--shape-circle {
        border-radius: 50%;
        padding: 0;
    }

    // Sizes (generated via mixin; also handles only-icon & circle width)
    @include mix.button-generate-sizes($buig-button-sizes, '.buig-button');

    // Long
    &--long {
        width: 100%;
    }

    // Icon
    &__icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }
    &--only-icon {
        padding: 0;
    }
    &--only-icon &__content {
        display: none;
    }

    // Disabled & Loading
    &--disabled {
        opacity: 0.55;
        cursor: not-allowed;
    }
    &--loading {
        cursor: progress;
    }

    // Spinner
    &__spinner {
        width: 14px;
        height: 14px;
        border-radius: 50%;
        border: 2px solid currentColor;
        border-right-color: transparent;
        animation: buig-btn-spin 0.6s linear infinite;
    }

    // Focus
    &:focus-visible {
        outline: none;
        box-shadow: 0 0 0 3px
            var(--ui-color-focus-ring, rgba(64, 140, 255, 0.4));
    }
}

@keyframes buig-btn-spin {
    to {
        transform: rotate(360deg);
    }
}
